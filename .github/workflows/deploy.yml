name: CI/CD Pipeline

on:
  push:
    branches:
      - master  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  

      - name: Install dependencies
        run: |
          cd porfolio
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure this file is in your repo

      - name: Build Docker image
        run: |
          cd porfolio
          docker build -t ${{ secrets.DOCKER_USERNAME }}/portfolio:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/portfolio:latest

      - name: Deploy to GCP
        env:
          GCP_VM_IP: ${{ secrets.VM_HOST }}
          GCP_SSH_PRIVATE_KEY: ${{ secrets.MY_SSH_KEY }}
        run: |
          # Create the .ssh directory if it doesn't exist
          mkdir -p ~/.ssh
          # Set up SSH key for the current session
          echo "${GCP_SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # SSH into the GCP VM and pull the latest Docker image
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa USERNAME@${GCP_VM_IP} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
            # Optional: Run the Docker container
            docker stop portfolio || true  # Stop the old container if it exists
            docker rm portfolio || true  # Remove the old container if it exists
            docker run -d -p 5000:5000 --name portfolio ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          EOF

